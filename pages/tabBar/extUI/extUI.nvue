<template>
	<view class="uni-container">
        <!-- <view class='select-view'>
                <selectComponent v-for="(item,index) in selectTitleEn" :key="index"
                    class="selectItem"
                    ref="selectDom"
                    :changeFixed = "changeFixed"
                    :selectList = "item.options"
                    :handleSelectValue = "handleSelectValue"
                    :name = "item.selectName"
                    :selectLabel = "item.title"
                    :selectHeadClick = "selectHeadClick"
                >
                </selectComponent>
        </view> -->
        <!-- <view class="empty-view"></view> -->
        <!-- :selectLabel = "item.options[0].label" -->
        <!-- <view :class="isFixed ? 'sto-list position-fixed' : 'sto-list' " ref="stoList"> -->
        <view class="sto-list" ref="stoList">
            <view class="sto-list-view" v-for="(item, index) in stoListData" :key="index" @click="goDetailPage(item)">
                <view class="sto-list-image">
                    <image class="sto-list-image-style" :src="item.cover" mode="aspectFill"></image>
                </view>
                <view class="sto-list-content">
                    <view class="logo-view">
                        <image class="sto-list-logo" :src="item.logo_urk"></image>
                        <text class="sto-list-company-name">{{item['token name']}}</text>
                    </view>
                    <view class="sto-list-desc">{{item.brief}}</view>
                    <view class="sto-list-icon-view">
                        <icon class = "iconfont icondanxuankuang" style="color: #EE2E6B; font-size: 14px;"></icon>
                        <text class="sto-list-progress">{{item.status}}</text>
                    </view>
                </view>
            </view>
        </view>
        <mpvue-picker
        	:themeColor="themeColor"
        	ref="mpvuePicker"
        	:mode="mode"
        	:deepLength="deepLength"
        	:pickerValueDefault="pickerValueDefault"
        	@onConfirm="onConfirm"
        	@onCancel="onCancel"
        	:pickerValueArray="pickerValueArray"
        ></mpvue-picker>
	</view>
</template>
<script>
	import uLink from "@/components/uLink.vue"
    import selectComponent from "@/components/selectComponent/selectComponent.vue";
    import mpvuePicker from '@/components/mpvue-picker/mpvuePicker.vue';

    var util = require('../../../common/util.js');

	export default {
		components: {
			uLink,
            selectComponent,
            mpvuePicker
		},
        computed: {
            i18n(){
              return this.$t('market')
            }
        },
		data() {
			return {
                themeColor: '#007AFF',
                mode: '',
                deepLength: 1,
                pickerValueDefault: [0],
                pickerValueArray: [
                	{
                		label: '中文',
                		value: "zh-CN"
                	},
                	{
                		label: '英文',
                		value: "en-US"
                	}
                ],



                stoListData:[],
                isFixed: false,
                selectLabel: "Status",

                sortOptionsZh: [{
                        value: 'Date added asc',
                        label: '添加日期升序'
                    }, {
                        value: 'Date added desc',
                        label: '添加日期降序'
                    }, {
                        value: 'Profile % asc',
                        label: '项目披露程度升序'
                    }, {
                        value: 'Profile % desc',
                        label: '项目披露程度降序'
                    }, {
                        value: 'Start date',
                        label: '开始日期'
                    },{
                        value: 'End date',
                        label: '结束日期'
                }],
                sortOptionsEn: [{
                        value: 'Date added asc',
                        label: 'Date added asc'
                    }, {
                        value: 'Date added desc',
                        label: 'Date added desc',
                    }, {
                        value: 'Profile % asc',
                        label: 'Profile % asc',
                    }, {
                        value: 'Profile % desc',
                        label: 'Profile % desc',
                    }, {
                        value: 'Start date',
                        label: 'Start date',
                    },{
                        value: 'End date',
                        label: 'End date',
                }],
                sortValue: 'Date added asc',
                status:"All",
                category:"All",
                asset_class:"All",
                token_right:"All",
                country:"All",
                profile:"",

                page:"",
            selectTitleEn:[{
					title: "Status",
					selectName: "status",
					options: [{
							value: 'All',
							label: 'All'
						}, {
							value: 'Upcoming',
							label: 'Upcoming'
						}, {
							value: 'Main sale',
							label: 'Main sale'
						}, {
							value: 'Ended',
							label: 'Ended'
						}, {
							value: 'Funded',
							label: 'Funded'
						},{
							value: 'TBA',
							label: 'TBA'
					}],
				},{
					title: "Industry",
					selectName: "category",
					options: [{
							value: 'All',
							label: 'All'
						}, {
							value: 'Art',
							label: 'Art'
						}, {
							value: 'Banking',
							label: 'Banking'
						}, {
							value: 'E-commerce',
							label: 'E-commerce'
						}, {
							value: 'Energy',
							label: 'Energy'
						},{
							value: 'Finance',
							label: 'Finance'
						},{
							value: 'Gambling',
							label: 'Gambling'
						},{
							value: 'Healthcare',
							label: 'Healthcare'
						}],
				},{
					title: "asset class",
					selectName: "asset_class",
					options: [{
						value: 'All',
						label: 'All'
						},{
							value: 'Bonds',
							label: 'Bonds'
						}, {
							value: 'Equity',
							label: 'Equity'
						}, {
							value: 'Fund',
							label: 'Fund'
						}, {
							value: 'Real Estate',
							label: 'Real Estate'
						}, {
							value: 'REIT',
							label: 'REIT'
						},{
							value: 'Stock',
							label: 'Stock'
					}],
				},
                {
                	title: "Country of incorporation",
                	selectName: "country",
                	options: [{
                			value: 'All',
                			label: 'All'
                		}, {
                			value: 'Bahamas',
                			label: 'Bahamas'
                		}, {
                			value: 'Brazil',
                			label: 'Brazil'
                		}, {
                			value: 'Canada',
                			label: 'Canada'
                		}, {
                			value: 'Cayman Islands',
                			label: 'Cayman Islands'
                		},{
                			value: 'Denmark',
                			label: 'Denmark'
                		},{
                			value: 'Estonia',
                			label: 'Estonia'
                		},{
                			value: 'Finland',
                			label: 'Finland'
                		},{
                			value: 'France',
                			label: 'France'
                	}],
                },
                {
					title: "Token rights",
					selectName: "token_right",
					options: [{
							value: 'All',
							label: 'All'
						}, {
							value: 'Equitable Interest',
							label: 'Equitable Interest'
						}, {
							value: 'Equity Ownership',
							label: 'Equity Ownership'
						}, {
							value: 'Profit Share Right',
							label: 'Profit Share Right'
						}, {
							value: 'Redemption Right',
							label: 'Redemption Right'
						},{
							value: 'Voting Rights',
							label: 'Voting Rights'
						}],

				},

            ],
                selectTitleZh:[{
                    title: "状态",
                    selectName: "status",
                    options: [{
                            value: 'All',
                            label: '所有状态'
                        }, {
                            value: 'Upcoming',
                            label: '即将来临'
                        }, {
                            value: 'Main sale',
                            label: '强销期'
                        }, {
                            value: 'Ended',
                            label: '已结束'
                        }, {
                            value: 'Funded',
                            label: '募资结束'
                        },{
                            value: 'TBA',
                            label: '待定'
                        }],
                    },{
                        title: "行业",
                        selectName: "category",
                        options: [{
                                value: 'All',
                                label: '全部行业'
                            }, {
                                value: 'Art',
                                label: '艺术'
                            }, {
                                value: 'Banking',
                                label: '银行'
                            }, {
                                value: 'E-commerce',
                                label: '电子商务'
                            }, {
                                value: 'Energy',
                                label: '能源'
                            },{
                                value: 'Finance',
                                label: '金融'
                            },{
                                value: 'Gambling',
                                label: '博彩'
                            },{
                                value: 'Healthcare',
                                label: '卫生保健'
                    }],
                    },{
                        title: "资产类型",
                        selectName: "asset_class",
                        options: [{
                            value: 'All',
                            label: '全部资产'
                            },{
                                value: 'Bonds',
                                label: '债券'
                            }, {
                                value: 'Equity',
                                label: '产权'
                            }, {
                                value: 'Fund',
                                label: '基金'
                            }, {
                                value: 'Real Estate',
                                label: '房地产'
                            }, {
                                value: 'REIT',
                                label: '房地产信托'
                            },{
                                value: 'Stock',
                                label: '股票'
                        }],
                    },{
                        title: "代币权益",
                        selectName: "token_right",
                        options: [{
                                value: 'All',
                                label: '全部权益'
                            }, {
                                value: 'Equitable Interest',
                                label: '衡平利息'
                            }, {
                                value: 'Equity Ownership',
                                label: '股权'
                            }, {
                                value: 'Profit Share Right',
                                label: '利润分享权'
                            }, {
                                value: 'Redemption Right',
                                label: '赎回权'
                            },{
                                value: 'Voting Rights',
                                label: '投票权'
                            }],
                    },{
                        title: "成立国家",
                        selectName: "country",
                        options: [{
                                value: 'All',
                                label: '全部国家'
                            }, {
                                value: 'Bahamas',
                                label: '巴哈马'
                            }, {
                                value: 'Brazil',
                                label: '巴西'
                            }, {
                                value: 'Canada',
                                label: '加拿大'
                            }, {
                                value: 'Cayman Islands',
                                label: '开曼群岛'
                            },{
                                value: 'Denmark',
                                label: '丹麦'
                            },{
                                value: 'Estonia',
                                label: '爱沙尼亚'
                            },{
                                value: 'Finland',
                                label: '芬兰'
                            },{
                                value: 'France',
                                label: '法国'
                        }],
                }]
            }
        },

        // onLoad(){
        //     this.getStoList()
        // },
        onLoad(){
            this.getStoList()
            let language  = uni.getStorageSync('language');
            console.log(language)
            if( language == "en-US"){
                // this.setStyle(0, "英文");
                document.getElementsByClassName('uni-btn-icon')[1].innerText = "英文";
                this.$i18n.locale = "en-US";
                util.setTabBar("en-US","ST 列表", "ST List")

            } else{
                // this.setStyle(0, "中文");
                document.getElementsByClassName('uni-btn-icon')[1].innerText = "中文";
                this.$i18n.locale = "zh-CN";
                util.setTabBar("zh-CN","ST 列表", "ST List")
            }
        },

		methods: {
            selectHeadClick(targetDom){
                this.$refs.selectDom.map(item=>{
                    item.justCloseMask();
                })
            },
            changeFixed(isFixed){
                // this.isFixed = isFixed
                if(isFixed){
                    this.$refs.stoList.$el.setAttribute("class", "sto-list position-fixed")
                } else {
                    this.$refs.stoList.$el.setAttribute("class", "sto-list")
                }
            },
            handleSelectValue(name,value, label){
                this[name] = value
                this.getStoList()

            },
            getStoList(){
                let params =`sort=&status=${this.status}&category=${this.category}&asset_class=${this.asset_class}&token_right=${this.token_right}&country=${this.country}&page=1&limit=100`;
                uni.request({
                	url: `https://securityin.com/api/stos/get_list?${params}`,
                	data: {},
                	success: data => {
                        this.stoListData = data.data.data;
                	},
                	fail: (data, code) => {
                		console.log('fail' + JSON.stringify(data));
                	}
                });
            },
            goDetailPage(item) {
            	let url = '/pages/template/sto-detail/sto-detail?tokenName='+ item["token name"];
            	uni.navigateTo({
            		url: url
            	});
            },





            onCancel(){

            },
            	// 单列
            showSinglePicker() {
                this.mode = 'selector';
                this.deepLength = 1;
                this.pickerValueDefault = [0];
                this.$refs.mpvuePicker.show();
            },

            onConfirm(e) {
                this.$i18n.locale = e.value[0];
                this.setStyle(0, e.label);
                uni.setStorageSync('language', e.value[0]);
                util.setTabBar(this.$i18n.locale,"ST 列表", "ST List")
            },
            /**
                * 修改导航栏buttons
                * index[number] 修改的buttons 下标索引，最右边索引为0
                * text[string] 需要修改的text 内容
                */
            setStyle(index, text) {
            	let pages = getCurrentPages();
            	let page = pages[pages.length - 1];
            	if (text.length > 3) {
            		text = text.substr(0, 3) + '...';
            	}
            	// #ifdef APP-PLUS
            	let currentWebview = page.$getAppWebview();
            	let titleNView = currentWebview.getStyle().titleNView;
            	// 添加文字过长截取为3个字符，请根据自己业务需求更改
            	titleNView.buttons[0].text = text;
            	currentWebview.setStyle({
            		titleNView: titleNView
            	});
            	// #endif
            	// #ifdef H5
            	// h5 临时方案
            	document.getElementsByClassName('uni-btn-icon')[1].innerText = text;
            	// #endif
            },
            onBackPress() {
                if (this.$refs.mpvuePicker.showPicker) {
                    this.$refs.mpvuePicker.pickerCancel();
                    return true;
                }
            },
            onUnload() {
                if (this.$refs.mpvuePicker.showPicker) {
                    this.$refs.mpvuePicker.pickerCancel();
                }
            },
            onNavigationBarButtonTap(e) {
                if (e.index === 0) {
                    this.showSinglePicker();
                }
            }





		}
	}
</script>

<style>
	@import '../../../common/uni-nvue.css';
    @import '/static/iconfont.css';
</style>
